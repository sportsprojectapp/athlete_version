import streamlit as st
import pandas as pd
from datetime import datetime
import random

# -------------------------------
# App Config
# -------------------------------
st.set_page_config(page_title="Athlete Dashboard", layout="wide", page_icon="ЁЯПГтАНтЩВя╕П")

# -------------------------------
# Multi-language dictionary
# -------------------------------
lang_dict = {
    "English": {
        "dashboard_title": "ЁЯПЕ Athlete Dashboard",
        "profile_name": "Name",
        "profile_age": "Age",
        "profile_gender": "Gender",
        "profile_state": "State",
        "select_sport": "Select Your Sport",
        "latest_score": "Latest Score",
        "highest_score": "Highest Score",
        "attempts": "Attempts",
        "record_upload_video": "Record or Upload Video",
        "motivation_test": "Motivation Test",
        "question1": "Do you feel motivated today?",
        "question2": "Are you confident in your sport?",
        "question3": "Do you enjoy training?",
        "show_score": "Show Motivation Score",
        "motivated": "ЁЯТк You are motivated!",
        "keep_pushing": "Keep pushing! You can do it ЁЯТк",
        "answer_first": "Answer the questions first!"
    },
    "Malayalam": {
        "dashboard_title": "ЁЯПЕ р┤Жр┤ер╡Нр┤▓р┤▒р╡Нр┤▒р╡Н р┤бр┤╛р┤╖р╡Нр┤мр╡Лр╡╝р┤бр╡Н",
        "profile_name": "р┤кр╡Зр┤░р╡Н",
        "profile_age": "р┤╡р┤пр┤╕р╡Н",
        "profile_gender": "р┤▓р┤┐р┤Вр┤Чр┤В",
        "profile_state": "р┤╕р┤Вр┤╕р╡Нр┤ер┤╛р┤ир┤В",
        "select_sport": "р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤╕р╡Нр┤кр╡Лр╡╝р┤Яр╡Нр┤Яр╡Н р┤др┤┐р┤░р┤Юр╡Нр┤Юр╡Жр┤Яр╡Бр┤Хр╡Нр┤Хр╡Бр┤Х",
        "latest_score": "р┤Ер┤Яр╡Бр┤др╡Нр┤д р┤╕р╡НтАМр┤Хр╡Лр╡╝",
        "highest_score": "р┤ор╡Бр┤Хр┤│р┤┐р╡╜ р┤╕р╡НтАМр┤Хр╡Лр╡╝",
        "attempts": "р┤кр┤░р╡Ар┤Хр╡Нр┤╖р┤гр┤Щр╡Нр┤Щр╡╛",
        "record_upload_video": "р┤╡р╡Ар┤бр┤┐р┤пр╡Л р┤▒р╡Жр┤Хр╡Нр┤Хр╡Лр╡╝р┤бр╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤Ер┤кр╡Нр┤▓р╡Лр┤бр╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х",
        "motivation_test": "р┤кр╡Нр┤░р┤Ър╡Лр┤жр┤и р┤кр┤░р╡Ар┤Хр╡Нр┤╖",
        "question1": "р┤Зр┤ир╡Нр┤ир╡Н р┤ир┤┐р┤Щр╡Нр┤Щр╡╛ р┤кр╡Нр┤░р┤Ър╡Лр┤жр┤ир┤др╡Нр┤др╡Лр┤Яр╡Ж р┤Ер┤ир╡Бр┤нр┤╡р┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤ир╡Нр┤ир╡Бр┤╡р╡Л?",
        "question2": "р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤╕р╡Нр┤кр╡Лр╡╝р┤Яр╡Нр┤Яр┤┐р╡╜ р┤ир┤┐р┤Щр╡Нр┤Щр╡╛ р┤Жр┤др╡Нр┤ор┤╡р┤┐р┤╢р╡Нр┤╡р┤╛р┤╕р┤ор╡Бр┤│р╡Нр┤│р┤╡р┤ир┤╛р┤гр╡Л?",
        "question3": "р┤кр┤░р┤┐р┤╢р╡Ар┤▓р┤ир┤В р┤ир┤┐р┤Щр╡Нр┤Щр╡╛р┤Хр╡Нр┤Хр╡Н р┤Зр┤╖р╡Нр┤Яр┤ор┤╛р┤гр╡Л?",
        "show_score": "р┤кр╡Нр┤░р┤Ър╡Лр┤жр┤и р┤╕р╡Нр┤Хр╡Лр╡╝ р┤Хр┤╛р┤гр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х",
        "motivated": "ЁЯТк р┤ир┤┐р┤Щр╡Нр┤Щр╡╛ р┤кр╡Нр┤░р┤Ър╡Лр┤жр┤┐р┤др┤ир┤╛р┤гр╡Н!",
        "keep_pushing": "р┤др┤│р╡Нр┤│р┤┐р┤кр╡Лр┤╡р┤╛р┤др╡Ж р┤ор╡Бр┤ир╡Нр┤ир╡Лр┤Яр╡Нр┤Яр╡Н р┤кр╡Лр┤╡р╡В! р┤ир┤┐р┤Щр╡Нр┤Щр╡╛р┤Хр╡Нр┤Хр╡Н р┤Хр┤┤р┤┐р┤пр╡Бр┤В ЁЯТк",
        "answer_first": "р┤жр┤пр┤╡р┤╛р┤пр┤┐ р┤Жр┤жр╡Нр┤пр┤В р┤Ор┤▓р╡Нр┤▓р┤╛ р┤Ър╡Лр┤жр╡Нр┤пр┤Щр╡Нр┤Щр╡╛р┤Хр╡Нр┤Хр╡Бр┤В р┤Йр┤др╡Нр┤др┤░р┤В р┤ир┤▓р╡НтАНр┤Хр╡Бр┤Х!"
    },
    "Tamil": {
        "dashboard_title": "ЁЯПЕ роЕрогро┐роорпБро▒рпИ ро╡ро┐ро│рпИропро╛роЯрпНроЯрпБ роЯро╛ро╖рпНрокрпЛро░рпНроЯрпБ",
        "profile_name": "рокрпЖропро░рпН",
        "profile_age": "ро╡ропродрпБ",
        "profile_gender": "рокро╛ро▓ро┐ройроорпН",
        "profile_state": "рооро╛роиро┐ро▓роорпН",
        "select_sport": "роЙроЩрпНроХро│рпН ро╡ро┐ро│рпИропро╛роЯрпНроЯрпИ родрпЗро░рпНро╡рпБ роЪрпЖропрпНропро╡рпБроорпН",
        "latest_score": "роЪроорпАрокродрпНродро┐роп роородро┐рокрпНрокрпЖрогрпН",
        "highest_score": "роЕродро┐роХрокроЯрпНроЪ роородро┐рокрпНрокрпЖрогрпН",
        "attempts": "роорпБропро▒рпНроЪро┐роХро│рпН",
        "record_upload_video": "ро╡рпАроЯро┐ропрпЛ рокродро┐ро╡рпЗро▒рпНро▒ро╡рпБроорпН роЕро▓рпНро▓родрпБ рокродро┐ро╡рпБ роЪрпЖропрпНропро╡рпБроорпН",
        "motivation_test": "рооройрокрпНрокро┐роорпНроорпБродро▓рпН роЪрпЛродройрпИ",
        "question1": "роЗройрпНро▒рпБ роирпАроЩрпНроХро│рпН роЙро▒рпНроЪро╛роХрооро╛роХ роЙро│рпНро│рпАро░рпНроХро│ро╛?",
        "question2": "роЙроЩрпНроХро│рпН ро╡ро┐ро│рпИропро╛роЯрпНроЯро┐ро▓рпН роирпАроЩрпНроХро│рпН роироорпНрокро┐роХрпНроХрпИ ро╡рпИроХрпНроХро┐ро▒рпАро░рпНроХро│ро╛?",
        "question3": "рокропро┐ро▒рпНроЪро┐ роЪрпЖропрпНроп ро╡ро┐ро░рпБроорпНрокрпБроХро┐ро▒рпАро░рпНроХро│ро╛?",
        "show_score": "роЙро▒рпНроЪро╛роХ роородро┐рокрпНрокрпЖрогрпН роХро╛рогрпНрокро┐",
        "motivated": "ЁЯТк роирпАроЩрпНроХро│рпН роЙро▒рпНроЪро╛роХрооро╛роХ роЗро░рпБроХрпНроХро┐ро▒рпАро░рпНроХро│рпН!",
        "keep_pushing": "родро│рпНро│ро╛роорпЗ! роирпАроЩрпНроХро│рпН роЗродрпИроЪрпН роЪрпЖропрпНроп роорпБроЯро┐ропрпБроорпН ЁЯТк",
        "answer_first": "роорпБродро▓ро┐ро▓рпН роХрпЗро│рпНро╡ро┐роХро│рпБроХрпНроХрпБ рокродро┐ро▓ро│ро┐роХрпНроХро╡рпБроорпН!"
    },
    "Telugu": {
        "dashboard_title": "ЁЯПЕ р░Хр▒Нр░░р▒Ар░бр░╛р░Хр░╛р░░р▒Бр░бр░┐ р░бр▒Нр░пр░╛р░╖р▒НтАМр░мр▒Лр░░р▒Нр░бр▒Н",
        "profile_name": "р░кр▒Зр░░р▒Б",
        "profile_age": "р░╡р░пр░╕р▒Б",
        "profile_gender": "р░▓р░┐р░Вр░Чр░В",
        "profile_state": "р░░р░╛р░Ьр▒Нр░пр░В",
        "select_sport": "р░ор▒А р░Хр▒Нр░░р▒Ар░бр░ир▒Б р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐",
        "latest_score": "р░др░╛р░Ьр░╛ р░╕р▒Нр░Хр▒Лр░░р▒Б",
        "highest_score": "р░Ер░зр░┐р░Х р░╕р▒Нр░Хр▒Лр░░р▒Б",
        "attempts": "р░кр▒Нр░░р░пр░др▒Нр░ир░╛р░▓р▒Б",
        "record_upload_video": "р░╡р▒Ар░бр░┐р░пр▒Л р░░р░┐р░Хр░╛р░░р▒Нр░бр▒Н р░Ър▒Зр░пр░Вр░бр░┐ р░▓р▒Зр░жр░╛ р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
        "motivation_test": "р░ор▒Лр░Яр░┐р░╡р▒Зр░╖р░ир▒Н р░Яр▒Жр░╕р▒Нр░Яр▒Н",
        "question1": "р░ор▒Ар░░р▒Б р░И р░░р▒Лр░Ьр▒Б р░кр▒Нр░░р▒Зр░░р░г р░кр▒Кр░Вр░жр░╛р░░р░╛?",
        "question2": "р░ор▒А р░Хр▒Нр░░р▒Ар░бр░▓р▒Л р░ор▒Ар░░р▒Б р░зр▒Ир░░р▒Нр░пр░Вр░Чр░╛ р░Йр░ир▒Нр░ир░╛р░░р░╛?",
        "question3": "р░кр▒Нр░░р░╢р░┐р░Хр▒Нр░╖р░г р░Ър▒Зр░пр░бр░В р░ор▒Ар░Хр▒Б р░Зр░╖р▒Нр░Яр░В?",
        "show_score": "р░ор▒Лр░Яр░┐р░╡р▒Зр░╖р░ир▒Н р░╕р▒Нр░Хр▒Лр░░р▒Б р░Ър▒Вр░кр░┐р░Вр░Ър▒Б",
        "motivated": "ЁЯТк р░ор▒Ар░░р▒Б р░кр▒Нр░░р▒Зр░░р░г р░кр▒Кр░Вр░жр░╛р░░р▒Б!",
        "keep_pushing": "р░др░Чр▒Нр░Чр░Хр▒Бр░Вр░бр░╛ р░Хр▒Кр░ир░╕р░╛р░Чр░┐р░Вр░Ър░Вр░бр░┐! р░ор▒Ар░░р▒Б р░Ър▒Зр░пр░Чр░▓р░░р▒Б ЁЯТк",
        "answer_first": "р░ор▒Бр░Вр░жр▒Бр░Чр░╛ р░кр▒Нр░░р░╢р▒Нр░ир░▓р░Хр▒Б р░╕р░ор░╛р░зр░╛р░ир░В р░Зр░╡р▒Нр░╡р░Вр░бр░┐!"
    }
}

# -------------------------------
# Sidebar: Language & Theme
# -------------------------------
selected_lang = st.sidebar.selectbox("Select Language", list(lang_dict.keys()))
t = lang_dict[selected_lang]

dark_mode = st.sidebar.checkbox("Dark Mode", value=True)
bg_color = "#111111" if dark_mode else "#FFFFFF"
text_color = "#FFFFFF" if dark_mode else "#000000"

st.markdown(f"""
<style>
    .stApp {{
        background-color: {bg_color};
        color: {text_color};
    }}
    .stButton>button {{
        color: {text_color};
    }}
    .banner {{
        border-radius: 10px;
        padding: 15px;
        margin: 10px 0px;
        background-color: #FFD580;
    }}
</style>
""", unsafe_allow_html=True)

# -------------------------------
# Sample Athlete Data
# -------------------------------
sports_data = [
    {"sport": "Sprinting", "score": 88, "highest": 95, "attempts": 5, "video_url": ""},
    {"sport": "Long Jump", "score": 82, "highest": 90, "attempts": 4, "video_url": ""},
    {"sport": "High Jump", "score": 90, "highest": 95, "attempts": 6, "video_url": ""},
    {"sport": "Swimming", "score": 75, "highest": 80, "attempts": 3, "video_url": ""},
    {"sport": "Cycling", "score": 65, "highest": 70, "attempts": 2, "video_url": ""},
]

# -------------------------------
# Athlete Profile
# -------------------------------
st.markdown(f"<h1 style='color:{text_color}'>{t['dashboard_title']}</h1>", unsafe_allow_html=True)

profile_col1, profile_col2 = st.columns([1, 3])
with profile_col1:
    st.image("https://randomuser.me/api/portraits/men/1.jpg", width=120)
with profile_col2:
    st.markdown(f"**{t['profile_name']}:** Athlete 1")
    st.markdown(f"**{t['profile_age']}:** 20")
    st.markdown(f"**{t['profile_gender']}:** Male")
    st.markdown(f"**{t['profile_state']}:** Kerala")

st.markdown("---")

# -------------------------------
# Sport Banners
# -------------------------------
st.subheader(t['select_sport'])

for sport in sports_data:
    with st.expander(f"{sport['sport']} ЁЯПЖ"):
        st.image("https://via.placeholder.com/150", width=150)
        st.markdown(f"**{t['latest_score']}:** {sport['score']}")
        st.markdown(f"**{t['highest_score']}:** {sport['highest']}")
        st.markdown(f"**{t['attempts']}:** {sport['attempts']}")
        uploaded_video = st.file_uploader(t['record_upload_video'], type=["mp4"], key=sport['sport'])
        if uploaded_video:
            st.video(uploaded_video)

st.markdown("---")

# -------------------------------
# Motivation Test
# -------------------------------
st.subheader(t['motivation_test'])

questions = [t['question1'], t['question2'], t['question3']]
responses = []

for idx, q in enumerate(questions):
    st.markdown(f"**{q}**")
    col1, col2, col3 = st.columns(3)
    if col1.button("ЁЯШГ Yes", key=f"{idx}-yes"):
        responses.append(1)
    if col2.button("ЁЯШР Maybe", key=f"{idx}-maybe"):
        responses.append(0)
    if col3.button("ЁЯШЮ No", key=f"{idx}-no"):
        responses.append(-1)

if st.button(t['show_score']):
    if responses:
        score = sum(responses)
        if score > 0:
            st.success(t['motivated'])
        else:
            st.info(t['keep_pushing'])
    else:
        st.warning(t['answer_first'])

